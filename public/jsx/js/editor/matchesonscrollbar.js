(function(t){!function(i){typeof exports==t[0]&&typeof module==t[0]?i(require(t[1]),require(t[2]),require(t[3])):typeof define==t[4]&&define[t[5]]?define([t[1],t[2],t[3]],i):i(CodeMirror)}(function(i){"use strict";function s(i,s,e,h){this[t[9]]=i,this[t[10]]=h;var r={listenForChanges:!1};for(var n in h)r[n]=h[n];r[t[11]]||(r[t[11]]=t[12]),this[t[13]]=i[t[14]](r),this[t[15]]=s,this[t[16]]=e,this[t[17]]={from:i[t[18]](),to:i[t[19]]()+1},this[t[20]]=[],this[t[21]]=null,this[t[22]](),this[t[13]][t[21]](this[t[20]]);var o=this;i[t[23]](t[24],this[t[25]]=function(i,s){o[t[26]](s)})}function e(i,s,e){return i<=s?i:Math[t[37]](s,i+e)}i[t[6]](t[7],function(i,e,h){return typeof h==t[8]&&(h={className:h}),h||(h={}),new s(this,i,e,h)});s[t[27]][t[22]]=function(){if(this[t[17]]){for(var s=0;s<this[t[20]][t[28]];s++){var e=this[t[20]][s];if(e[t[30]][t[29]]>=this[t[17]][t[31]])break;e[t[31]][t[29]]>=this[t[17]][t[30]]&&this[t[20]][t[32]](s--,1)}for(var h=this[t[9]][t[33]](this[t[15]],i[t[34]](this[t[17]][t[30]],0),this[t[16]]),r=this[t[10]]&&this[t[10]][t[35]]||1e3;h[t[36]]();){var e={from:h[t[30]](),to:h[t[31]]()};if(e[t[30]][t[29]]>=this[t[17]][t[31]])break;if(this[t[20]][t[32]](s++,0,e),this[t[20]][t[28]]>r)break}this[t[17]]=null}},s[t[27]][t[26]]=function(s){var h=s[t[30]][t[29]],r=i[t[38]](s)[t[29]],n=r-s[t[31]][t[29]];if(this[t[17]]?(this[t[17]][t[30]]=Math[t[39]](e(this[t[17]][t[30]],h,n),s[t[30]][t[29]]),this[t[17]][t[31]]=Math[t[37]](e(this[t[17]][t[31]],h,n),s[t[30]][t[29]])):this[t[17]]={from:s[t[30]][t[29]],to:r+1},n)for(var o=0;o<this[t[20]][t[28]];o++){var a=this[t[20]][o],c=e(a[t[30]][t[29]],h,n);c!=a[t[30]][t[29]]&&(a[t[30]]=i[t[34]](c,a[t[30]][t[40]]));var f=e(a[t[31]][t[29]],h,n);f!=a[t[31]][t[29]]&&(a[t[31]]=i[t[34]](f,a[t[31]][t[40]]))}clearTimeout(this[t[21]]);var u=this;this[t[21]]=setTimeout(function(){u[t[41]]()},250)},s[t[27]][t[41]]=function(){this[t[22]](),this[t[13]][t[21]](this[t[20]])},s[t[27]][t[42]]=function(){this[t[9]][t[43]](t[24],this[t[25]]),this[t[13]][t[42]]()}})}).call(this,["object","../../lib/codemirror","./searchcursor","../scroll/annotatescrollbar","function","amd","defineExtension","showMatchesOnScrollbar","string","cm","options","className","CodeMirror-search-match","annotation","annotateScrollbar","query","caseFold","gap","firstLine","lastLine","matches","update","findMatches","on","change","changeHandler","onChange","prototype","length","line","from","to","splice","getSearchCursor","Pos","maxMatches","findNext","max","changeEnd","min","ch","updateAfterChange","clear","off"]);